// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.9
// 	protoc        v6.32.0
// source: notification/notification.proto

package notification

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetByUserIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetByUserIDRequest) Reset() {
	*x = GetByUserIDRequest{}
	mi := &file_notification_notification_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetByUserIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetByUserIDRequest) ProtoMessage() {}

func (x *GetByUserIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_notification_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetByUserIDRequest.ProtoReflect.Descriptor instead.
func (*GetByUserIDRequest) Descriptor() ([]byte, []int) {
	return file_notification_notification_proto_rawDescGZIP(), []int{0}
}

func (x *GetByUserIDRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type NotificationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId int64                  `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	UserId         int64                  `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Content        string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	IsRead         bool                   `protobuf:"varint,4,opt,name=is_read,json=isRead,proto3" json:"is_read,omitempty"`
	CreatedAt      int64                  `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	mi := &file_notification_notification_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_notification_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_notification_notification_proto_rawDescGZIP(), []int{1}
}

func (x *NotificationResponse) GetNotificationId() int64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

func (x *NotificationResponse) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *NotificationResponse) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *NotificationResponse) GetIsRead() bool {
	if x != nil {
		return x.IsRead
	}
	return false
}

func (x *NotificationResponse) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type MarkAsReadRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	NotificationId int64                  `protobuf:"varint,1,opt,name=notification_id,json=notificationId,proto3" json:"notification_id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MarkAsReadRequest) Reset() {
	*x = MarkAsReadRequest{}
	mi := &file_notification_notification_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadRequest) ProtoMessage() {}

func (x *MarkAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_notification_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_notification_proto_rawDescGZIP(), []int{2}
}

func (x *MarkAsReadRequest) GetNotificationId() int64 {
	if x != nil {
		return x.NotificationId
	}
	return 0
}

type MarkAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAsReadResponse) Reset() {
	*x = MarkAsReadResponse{}
	mi := &file_notification_notification_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAsReadResponse) ProtoMessage() {}

func (x *MarkAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_notification_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_notification_proto_rawDescGZIP(), []int{3}
}

func (x *MarkAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

type MarkAllAsReadRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        int64                  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllAsReadRequest) Reset() {
	*x = MarkAllAsReadRequest{}
	mi := &file_notification_notification_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllAsReadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllAsReadRequest) ProtoMessage() {}

func (x *MarkAllAsReadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_notification_notification_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllAsReadRequest.ProtoReflect.Descriptor instead.
func (*MarkAllAsReadRequest) Descriptor() ([]byte, []int) {
	return file_notification_notification_proto_rawDescGZIP(), []int{4}
}

func (x *MarkAllAsReadRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type MarkAllAsReadResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MarkAllAsReadResponse) Reset() {
	*x = MarkAllAsReadResponse{}
	mi := &file_notification_notification_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MarkAllAsReadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MarkAllAsReadResponse) ProtoMessage() {}

func (x *MarkAllAsReadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_notification_notification_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MarkAllAsReadResponse.ProtoReflect.Descriptor instead.
func (*MarkAllAsReadResponse) Descriptor() ([]byte, []int) {
	return file_notification_notification_proto_rawDescGZIP(), []int{5}
}

func (x *MarkAllAsReadResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

var File_notification_notification_proto protoreflect.FileDescriptor

const file_notification_notification_proto_rawDesc = "" +
	"\n" +
	"\x1fnotification/notification.proto\x12\fnotification\"-\n" +
	"\x12GetByUserIDRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"\xaa\x01\n" +
	"\x14NotificationResponse\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x03R\x0enotificationId\x12\x17\n" +
	"\auser_id\x18\x02 \x01(\x03R\x06userId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x17\n" +
	"\ais_read\x18\x04 \x01(\bR\x06isRead\x12\x1d\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03R\tcreatedAt\"<\n" +
	"\x11MarkAsReadRequest\x12'\n" +
	"\x0fnotification_id\x18\x01 \x01(\x03R\x0enotificationId\".\n" +
	"\x12MarkAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"/\n" +
	"\x14MarkAllAsReadRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\x03R\x06userId\"1\n" +
	"\x15MarkAllAsReadResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess2\x9d\x02\n" +
	"\x13NotificationService\x12W\n" +
	"\vGetByUserID\x12 .notification.GetByUserIDRequest\x1a\".notification.NotificationResponse\"\x000\x01\x12Q\n" +
	"\n" +
	"MarkAsRead\x12\x1f.notification.MarkAsReadRequest\x1a .notification.MarkAsReadResponse\"\x00\x12Z\n" +
	"\rMarkAllAsRead\x12\".notification.MarkAllAsReadRequest\x1a#.notification.MarkAllAsReadResponse\"\x00B<Z:github.com/IAGrig/vt-csa-essays/backend/proto/notificationb\x06proto3"

var (
	file_notification_notification_proto_rawDescOnce sync.Once
	file_notification_notification_proto_rawDescData []byte
)

func file_notification_notification_proto_rawDescGZIP() []byte {
	file_notification_notification_proto_rawDescOnce.Do(func() {
		file_notification_notification_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_notification_notification_proto_rawDesc), len(file_notification_notification_proto_rawDesc)))
	})
	return file_notification_notification_proto_rawDescData
}

var file_notification_notification_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_notification_notification_proto_goTypes = []any{
	(*GetByUserIDRequest)(nil),    // 0: notification.GetByUserIDRequest
	(*NotificationResponse)(nil),  // 1: notification.NotificationResponse
	(*MarkAsReadRequest)(nil),     // 2: notification.MarkAsReadRequest
	(*MarkAsReadResponse)(nil),    // 3: notification.MarkAsReadResponse
	(*MarkAllAsReadRequest)(nil),  // 4: notification.MarkAllAsReadRequest
	(*MarkAllAsReadResponse)(nil), // 5: notification.MarkAllAsReadResponse
}
var file_notification_notification_proto_depIdxs = []int32{
	0, // 0: notification.NotificationService.GetByUserID:input_type -> notification.GetByUserIDRequest
	2, // 1: notification.NotificationService.MarkAsRead:input_type -> notification.MarkAsReadRequest
	4, // 2: notification.NotificationService.MarkAllAsRead:input_type -> notification.MarkAllAsReadRequest
	1, // 3: notification.NotificationService.GetByUserID:output_type -> notification.NotificationResponse
	3, // 4: notification.NotificationService.MarkAsRead:output_type -> notification.MarkAsReadResponse
	5, // 5: notification.NotificationService.MarkAllAsRead:output_type -> notification.MarkAllAsReadResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_notification_notification_proto_init() }
func file_notification_notification_proto_init() {
	if File_notification_notification_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_notification_notification_proto_rawDesc), len(file_notification_notification_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_notification_notification_proto_goTypes,
		DependencyIndexes: file_notification_notification_proto_depIdxs,
		MessageInfos:      file_notification_notification_proto_msgTypes,
	}.Build()
	File_notification_notification_proto = out.File
	file_notification_notification_proto_goTypes = nil
	file_notification_notification_proto_depIdxs = nil
}
